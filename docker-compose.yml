# docker-compose.yml
services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: orders-products-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: orders_products
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./server/database/seeds.sql:/docker-entrypoint-initdb.d/02-seeds.sql
    networks:
      - app-network

  # Backend Server
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: orders-products-server
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=db
      - DB_USER=app_user
      - DB_PASSWORD=app_password
      - DB_NAME=orders_products
      - CLIENT_URL=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - ./server:/app
      - /app/node_modules

  # Frontend Client
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: orders-products-client
    restart: always
    environment:
      - NEXT_PUBLIC_SERVER_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: orders-products-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - client
      - server
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge