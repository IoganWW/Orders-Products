services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: orders_products_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: orders_products
      MYSQL_USER: orders_user
      MYSQL_PASSWORD: orders_password
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./server/database/seeds.sql:/docker-entrypoint-initdb.d/02-seeds.sql
    networks:
      - orders_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 10s

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: orders_products_server
    restart: always
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: mysql
      DB_USER: orders_user
      DB_PASSWORD: orders_password
      DB_NAME: orders_products
      CLIENT_URL: http://localhost:3000
      JWT_SECRET: your_super_secret_jwt_key_here
      SESSION_TIMEOUT_MINUTES: 30
      SESSION_CLEANUP_INTERVAL: 5
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - orders_network
    volumes:
      - ./server/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      timeout: 10s
      retries: 5
      start_period: 30s
      interval: 30s

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: orders_products_client
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_SERVER_URL: http://localhost:3001
    depends_on:
      server:
        condition: service_healthy
    networks:
      - orders_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      timeout: 10s
      retries: 5
      start_period: 60s
      interval: 30s

  # Nginx (Optional - for production load balancing)
  nginx:
    image: nginx:alpine
    container_name: orders_products_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - client
      - server
    networks:
      - orders_network
    profiles:
      - production

networks:
  orders_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local