'use client';

import React, { useEffect } from 'react';
import Header from './Header';
import Sidebar from './Sidebar';
import Notifications, { showNotification } from '@/components/UI/Notifications';
import { useSocket } from '@/hooks/useSocket';
import { useAppDispatch, useAppSelector  } from '@/store';
import { initializeAuth, logoutUser  } from '@/store/slices/authSlice';
import styles from './Layout.module.css';

interface MainLayoutProps {
  children: React.ReactNode;
}

const MainLayout: React.FC<MainLayoutProps> = ({ children }) => {
  const dispatch = useAppDispatch();
  const { isAuthenticated, token } = useAppSelector(state => state.auth);

  useSocket(); // –ü–æ–¥–∫–ª—é—á–∞–µ–º Socket.io

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    dispatch(initializeAuth());
  }, [dispatch]);

  // useEffect –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
  useEffect(() => {
    let interval: NodeJS.Timeout;
    let storageListener: ((e: StorageEvent) => void) | null = null;

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    const checkTokenSync = () => {
      const storageToken = localStorage.getItem('token');
      
      // –ï—Å–ª–∏ –≤ Redux –µ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –Ω–æ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage –Ω–µ—Ç
      if (isAuthenticated && token && !storageToken) {
        console.warn('üö® Token manually removed from localStorage - forcing logout');
        
        dispatch(logoutUser());
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        showNotification({
          type: 'warning',
          message: '–°–µ—Å—Å–∏—è –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ',
          duration: 4000
        });
      }
      
      // –ï—Å–ª–∏ –≤ localStorage –µ—Å—Ç—å —Ç–æ–∫–µ–Ω, –Ω–æ Redux –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
      if (!isAuthenticated && storageToken) {
        console.warn('üö® Inconsistent state detected - clearing localStorage');
        localStorage.removeItem('token');
        localStorage.removeItem('user');
      }
    };

    // –°–ª—É—à–∞—Ç–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∏–π localStorage (—Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏)
    const handleStorageChange = (e: StorageEvent) => {
      if (e.key === 'token' && e.oldValue && !e.newValue) {
        console.warn('üö® Token removed from localStorage in another tab');
        
        if (isAuthenticated) {
          dispatch(logoutUser());
          
          showNotification({
            type: 'warning',
            message: '–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ –¥—Ä—É–≥–æ–π –≤–∫–ª–∞–¥–∫–µ',
            duration: 4000
          });
        }
      }
    };

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ –æ–∫–Ω–µ
    const handleWindowFocus = () => {
      checkTokenSync();
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if (isAuthenticated) {
      // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
      interval = setInterval(checkTokenSync, 3000);
      
      // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è localStorage
      storageListener = handleStorageChange;
      window.addEventListener('storage', storageListener);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
      window.addEventListener('focus', handleWindowFocus);
    }

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return () => {
      if (interval) {
        clearInterval(interval);
      }
      if (storageListener) {
        window.removeEventListener('storage', storageListener);
      }
      window.removeEventListener('focus', handleWindowFocus);
    };
  }, [isAuthenticated, token, dispatch]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  return (
    <div className={`${styles.layout} layout`}>
      <Header />
      <div className={`${styles.layoutBody} layout-body`}>
        <Sidebar />
        <main className={`${styles.layoutMain} layout-main`}>
          {children}
        </main>
      </div>
      <Notifications />
    </div>
  );
};

export default MainLayout;